package ru.geekbrains.seminar2;import java.util.ArrayList;import java.util.Scanner;public class Sample01 {    public static String data = """� ��������� ��� ������;������ ���� �� ���� ���:� ��� � ����� ��� �������� ����� �� ���� ������;��� ������� � ����� �������,������ � ������ �������.��� ������: ��� ����� ������,������� �� ������ �����;��� �� ��������� ������������� ���������� ������;������� ��� �� ������ ����������� ��� ����, ��� ������;��� ��� � ��� ������� �����;��� � ���� ��������� ������� ���� �������� � ������,� �������� ������� ���������������� �� ��� ������� �����,� � ���� ������ �� �������;��� ��������� ���������������� �������� ����;��� � ������� ����� ������������ ����, ����� ���������� ���� ��������;� ������� ��� ������� �����,� ����� ���� �� ����� ������;��� ����� � ����� �������, ����� ���� �����,��� ���� ����� ��� ������ ������;��� ������� ���� ��� ����� ������!� ��� � ���, � �� � ���;� ���� ����� ��� ������;��� ��� �����, � ��� ���������� ��� ������ �������.            """;    public static void main(String[] args) {        LogReader logReader = new PoemReader(data);        logReader.setCurrentPosition(30);        for (LogEntry log: logReader.readLogEntry()) {            System.out.println(log.getText());        }    }}/** * ������ ���� */class LogEntry{    private String text;    public String getText() {        return text;    }    public LogEntry(String text) {        this.text = text;    }}abstract class LogReader{    private Integer currentPosition = 0;    public Integer getCurrentPosition() {        return currentPosition;    }    public abstract void setDatasource(Object data);    public abstract Object getDatasource();    public void setCurrentPosition(Integer currentPosition) {        this.currentPosition = currentPosition;    }    public Iterable<LogEntry> readLogEntry(){        ArrayList<LogEntry> logList = new ArrayList<>();        for (String s : readEntries(currentPosition)){            logList.add(parseLogEntry(s));        }        return logList;    }    protected abstract Iterable<String> readEntries(Integer position);    protected abstract LogEntry parseLogEntry(String stringEntry);}class PoemReader extends LogReader{    private String data;    public void setData(String data) {        this.data = data;    }    public PoemReader(String data) {        this.data = data;    }    public PoemReader() {    }    @Override    public void setDatasource(Object data) {        this.data = data.toString();    }    @Override    public Object getDatasource() {        return data;    }    @Override    protected Iterable<String> readEntries(Integer position) {        Scanner scanner = new Scanner(data);        ArrayList<String> logEntry = new ArrayList<>();        int counter = 0;        while (scanner.hasNextLine()){            if (counter >= position){                position = counter;                String line = scanner.nextLine();                logEntry.add(line);            }            else {                scanner.nextLine();            }            counter++;        }        return logEntry;    }    @Override    protected LogEntry parseLogEntry(String stringEntry) {        return new LogEntry(stringEntry);    }}